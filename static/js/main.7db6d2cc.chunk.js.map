{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","Mint.js","Manage.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","owner","ethers","errorMsg","blockchainReducer","state","action","type","payload","Owner","totalSupply","publicCost","whitelistCost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","getState","String","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","ethereum","isMetaMask","provider","providers","Web3Provider","window","request","method","accounts","networkId","signer","getSigner","NETWORK","ID","SmartContractObj","Contract","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","keccak256","require","MerkleTree","StyledButton","button","ConnectButton","StyledRoundButton","StyledMaxButton","ResponsiveWrapper","StyledLink","img","a","App","Price","now","Math","floor","Date","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","totalCost","setTotalCost","Whitelisted","setWhitelisted","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","claimNFTs","leaf","map","addr","Merkletree","sortPairs","rootHash","getRoot","toString","adddd","proof","getHexProof","totalCostWei","mint","value","TX","wait","Res","code","message","slice","whitelistMint","freeMint","getData","getConfig","config","getWhitelistedAddresses","Data","text","Addresses","split","length","getDefaultProvider","getBalance","balance","cost","utils","parseUnits","amount","alert","useEffect","isConnected","style","padding","backgroundColor","alignItems","onClick","e","preventDefault","disabled","borderRadius","maxWidth","boxShadow","textAlign","fontWeight","color","Number","target","href","fontSize","fontFamily","justifyContent","borderBottom","lineHeight","newMintAmount","newAmount","toFixed","decrementMintAmount","incrementMintAmount","maxCost","StyledLogo","textarea","copy","setCopy","whitelistProcess","setwhitelistProcess","PublicProcess","setPublicProcess","useRef","Roothash","setRoothash","whitelist","whitelistEnabled","setWhitelistEnabled","Public","setPaused","RootHash","hash","setMerkleRoot","alt","src","opacity","width","paused","process","exact","path","element","Mint","Manage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7db6d2cc.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  owner: null,\n  ethers: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        owner: action.payload.Owner,\n        ethers: action.payload.ethers,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  publicCost: 0,\n  whitelistCost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        whitelistCost: action.payload.whitelistCost,\n        publicCost: action.payload.publicCost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n\n    try {\n\n      let totalSupply = await store\n        .getState().\n        blockchain.smartContract.totalSupply();\n      totalSupply = String(totalSupply)\n\n\n\n      let publicCost = await store\n        .getState()\n        .blockchain.smartContract.publicCost()\n        ;\n      publicCost = String(publicCost)\n      let whitelistCost = await store\n        .getState()\n        .blockchain.smartContract.whitelistCost()\n        ;\n      whitelistCost = String(whitelistCost)\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          publicCost,\n          whitelistCost\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n\n\n\n","// constants\nimport { ethers } from 'ethers'\n\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      var provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n\n        var signer = provider.getSigner(accounts[0]);\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new ethers.Contract(\n            CONFIG.CONTRACT_ADDRESS,\n            abi,\n            signer\n          );\n          console.log(SmartContractObj)\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              ethers: ethers,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\n\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n\n\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 90px;\n  font-weight: 500;\n  line-height: 1.6;\n  @media (max-width: 767px) {\n    font-size: 40px;\n  }\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 50px;\n  line-height: 1.6;\n  @media (max-width: 767px) {\n    font-size: 30px;\n  }\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nconst keccak256 = require(\"keccak256\");\nconst { MerkleTree } = require(\"merkletreejs\");\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  font-size: 60px;\n  width: 300px;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  @media (max-width: 767px) {\n    font-size: 30px;\n    width: 100px;\n\n  }\n`;\nexport const ConnectButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--accent);\n  font-size: 30px;\n  width: 210px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n//  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n//  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n//  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\nexport const StyledRoundButton = styled.button`\n\n  border: none;\n  background-color: var(--primary-text);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 50px;\n  color: var(--accent-text);\n\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n\n  @media (max-width: 767px) {\n    font-size: 30px;\n  }\n`;\nexport const StyledMaxButton = styled.button`\n  border: none;\n  background-color: var(--accent-text);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 50px;\n  color: var(--primary-text);\n\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n\n  @media (max-width: 767px) {\n    font-size: 30px;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n    let Price;\n\n    let now = Math.floor(Date.now() / 1000);\n    if (now >= 1667283000 && now <= 1667283600) {\n        Price = 0.00911;\n    } else if (now >= 1667283600 && now <= 1667343600) {\n        Price = 0.03;\n    }else {\n        Price = 0;\n    }\n\n\n    const dispatch = useDispatch();\n    const blockchain = useSelector((state) => state.blockchain);\n    const data = useSelector((state) => state.data);\n    const [claimingNft, setClaimingNft] = useState(false);\n    const [feedback, setFeedback] = useState(``);\n    const [mintAmount, setMintAmount] = useState(1);\n    const [totalCost, setTotalCost] = useState(Price);\n\n    const [Whitelisted, setWhitelisted] = useState([]);\n\n    const [CONFIG, SET_CONFIG] = useState({\n        CONTRACT_ADDRESS: \"\",\n        SCAN_LINK: \"\",\n        NETWORK: {\n            NAME: \"\",\n            SYMBOL: \"\",\n            ID: 0,\n        },\n        NFT_NAME: \"\",\n        SYMBOL: \"\",\n        MAX_SUPPLY: 1,\n        WEI_COST: 0,\n        DISPLAY_COST: 0,\n        GAS_LIMIT: 0,\n        MARKETPLACE: \"\",\n        MARKETPLACE_LINK: \"\",\n        SHOW_BACKGROUND: false,\n    });\n\n\n    const claimNFTs = async () => {\n\n        const leaf = Whitelisted.map(addr => keccak256(addr));\n        const Merkletree = new MerkleTree(leaf, keccak256, { sortPairs: true });\n\n        const rootHash = Merkletree.getRoot().toString('hex');\n        const adddd = keccak256(blockchain.account);\n\n        const proof = Merkletree.getHexProof(adddd);\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n\n        console.log(\"Root Hash : 0x\" + rootHash);\n\n        let publicCost = await blockchain.smartContract.publicCost();\n        let whitelistCost = await blockchain.smartContract.whitelistCost();\n        console.log(whitelistCost);\n\n        let totalCostWei;\n        // let now = Math.floor(Date.now() / 1000);\n\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n        setClaimingNft(true);\n\n        if (now >= 1667283000 && now <= 1667283600) {\n            totalCostWei = String(publicCost * mintAmount);\n            try {\n                let TX = await blockchain.smartContract\n                    .mint(mintAmount, {value: totalCostWei});\n                console.log(TX)\n                let Res = await TX.wait(1)\n                console.log(Res)\n                console.log()\n                setFeedback(\n                    `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n                );\n                setClaimingNft(false);\n            } catch (error) {\n                if (error.code === -32603) {\n                    setFeedback(error.data.message.slice(20));\n                } else if (error.code === -32000) {\n                    setFeedback(\"Insufficient Funds.\");\n                } else if (error.code === 4001) {\n                    setFeedback(\"Mint Canceled , Please Try Again.\");\n                } else {\n                    setFeedback(\"Something Went Wrong , Please Try Again.\");\n                }\n                setClaimingNft(false);\n            }\n\n        } else if (now >= 1667283600 && now <= 1667343600) {\n            totalCostWei = String(whitelistCost * mintAmount);\n            try {\n                let TX = await blockchain.smartContract\n                    .whitelistMint(mintAmount, proof, {value: totalCostWei})\n                console.log(TX)\n                let Res = await TX.wait(1)\n                console.log(Res)\n                console.log()\n                setFeedback(\n                    `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n                );\n                setClaimingNft(false);\n            } catch (error) {\n                if (error.code === -32603) {\n                    setFeedback(error.data.message.slice(20));\n                } else if (error.code === -32000) {\n                    setFeedback(\"Insufficient Funds.\");\n                } else if (error.code === 4001) {\n                    setFeedback(\"Mint Canceled , Please Try Again.\");\n                } else {\n                    setFeedback(\"Something Went Wrong , Please Try Again.\");\n                }\n                setClaimingNft(false);\n            }\n\n        }else if (now >= 1667343600){\n            try {\n                let TX = await blockchain.smartContract\n                    .freeMint(mintAmount)\n                console.log(TX)\n                let Res = await TX.wait(1)\n                console.log(Res)\n                console.log()\n                setFeedback(\n                    `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n                );\n                setClaimingNft(false);\n            } catch (error) {\n                if (error.code === -32603) {\n                    setFeedback(error.data.message.slice(20));\n                } else if (error.code === -32000) {\n                    setFeedback(\"Insufficient Funds.\");\n                } else if (error.code === 4001) {\n                    setFeedback(\"Mint Canceled , Please Try Again.\");\n                } else {\n                    setFeedback(\"Something Went Wrong , Please Try Again.\");\n                }\n                setClaimingNft(false);\n            }\n        }else{\n            setFeedback(\"Mint Failed\");\n            setClaimingNft(false);\n        }\n\n        setClaimingNft(false);\n\n    };\n\n\n    const decrementMintAmount = () => {\n        let newMintAmount = mintAmount - 1;\n        if (newMintAmount < 1) {\n            newMintAmount = 1;\n        }\n        setMintAmount(newMintAmount);\n        let newAmount = Number((newMintAmount * Price).toFixed(5));\n        setTotalCost(newAmount)\n\n    };\n\n    const incrementMintAmount = () => {\n        let newMintAmount = mintAmount + 1;\n        if (newMintAmount > 10) {\n            newMintAmount = 10;\n        }\n        setMintAmount(newMintAmount);\n        let newAmount = Number((newMintAmount * Price).toFixed(5));\n        setTotalCost(newAmount)\n\n    };\n\n    const getData = () => {\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n            dispatch(fetchData(blockchain.account));\n        }\n    };\n\n    const getConfig = async () => {\n        const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n        });\n        const config = await configResponse.json();\n        SET_CONFIG(config);\n    };\n\n\n    const getWhitelistedAddresses = async () => {\n        const Data = await fetch(\"/config/Addresses.txt\", {\n            headers: {\n                \"Content-Type\": \"plain/text\",\n                Accept: \"plain/text\",\n            },\n        });\n        var Addresses = await Data.text();\n        Addresses = Addresses.split('\\n')\n        setWhitelisted(Addresses)\n    }\n\n    async function isConnected() {\n        const accounts = await window.ethereum.request({method: 'eth_accounts'});       \n        if (accounts.length) {\n           dispatch(connect());\n        } else {\n          //  console.log(\"Metamask is not connected\");\n        }\n      }\n    async function maxCost() {\n        let provider = blockchain.ethers.getDefaultProvider()\n        let balance = await provider.getBalance(blockchain.account);\n        let cost = blockchain.ethers.utils.parseUnits(String(Price), \"ether\");\n        console.log(cost);\n        let amount = balance / cost;\n        if (amount == 0){\n            alert(\"Please Fund Your Account\");\n        }else{\n            if (amount > 10){\n            setMintAmount(10);\n            }else{\n            setMintAmount(amount);\n            }\n        }\n        console.log(amount);\n      }\n    \n\n    useEffect(() => {\n        isConnected();\n        getConfig();\n        getWhitelistedAddresses();\n    }, []);\n\n    useEffect(() => {\n        getData();\n    }, [blockchain.account]);\n\n    return (\n        <s.Screen style={{ padding: '24px' }}>\n            <s.Container\n                flex={1}\n                ai={\"center\"}\n                style={{ padding: 24, backgroundColor: \"var(--primary)\" , alignItems: 'flex-end' }}\n                image=\"/config/images/bg.png\"\n            >\n                {blockchain.account === \"\" ||\n                                    blockchain.smartContract === null ? (\n                <ConnectButton\n                    onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                    }}\n                >\n                    CONNECT\n                </ConnectButton>\n                                    ):\n                <ConnectButton\n                    disabled={1}\n                >\n                    CONNECTED\n                </ConnectButton>}\n                <s.SpacerSmall />\n                <ResponsiveWrapper flex={1} style={{ }} test>\n\n                    <s.Container\n                        flex={2}\n                        jc={\"center\"}\n                        ai={\"center\"}\n                        style={{\n                            backgroundColor: \"var(--accent)\",\n                            padding: 24,\n                            borderRadius: 50,\n                            maxWidth: \"543px\",\n                            // border: \"4px dashed var(--secondary)\",\n                            boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n                        }}\n                    >\n                        <s.TextTitle\n                            style={{\n                                textAlign: \"center\",\n                                fontWeight: \"500\",\n                                color: \"var(--accent-text)\",\n                            }}\n                        >\n                           MINT DUCKZILLAS\n                        </s.TextTitle>\n                        <s.TextDescription\n                            style={{\n                                textAlign: \"center\",\n                                color: \"var(--secondary-text)\",\n                            }}\n                        >\n                             QUACKLIST 8,888 NFTS\n                        </s.TextDescription>\n                        \n                        <s.SpacerSmall />\n                        {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                            <>\n                                <s.TextTitle\n                                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                >\n                                    The sale has ended.\n                                </s.TextTitle>\n                                <s.TextDescription\n                                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                >\n                                    You can still find {CONFIG.NFT_NAME} on\n                                </s.TextDescription>\n                                <s.SpacerSmall />\n                                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                                    {CONFIG.MARKETPLACE}\n                                </StyledLink>\n                            </>\n                        ) : (\n                            <>\n                                \n                                    <>\n                                        {blockchain.errorMsg !== \"\" ? (\n                                            <>\n                                                <s.SpacerSmall />\n                                                <s.TextDescription\n                                                    style={{\n                                                        fontSize: '25px',\n                                                        textAlign: \"center\",\n                                                        color: \"var(--accent-text)\",\n                                                        fontFamily: 'sans-serif'\n                                                    }}\n                                                >\n                                                    {blockchain.errorMsg}\n                                                </s.TextDescription>\n                                            </>\n                                        ) : null}\n                                        <s.TextDescription\n                                            style={{\n                                                fontSize: '25px',\n                                                textAlign: \"center\",\n                                                color: \"var(--accent-text)\",\n                                                fontFamily: 'sans-serif'\n\n                                            }}\n                                        >\n                                            {feedback}\n                                        </s.TextDescription>\n                                        <s.SpacerMedium />\n                                        <s.SpacerLarge />\n                                        <s.SpacerLarge />\n\n                                        <s.Container style={{ \n                                            justifyContent: 'space-between',\n                                            borderBottom: '5px solid var(--accent-text)'\n                                         }} ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                            <>\n                                                <s.TextDescription\n                                                    style={{\n                                                        textAlign: \"center\",\n                                                        color: \"var(--accent-text)\",\n                                                    }}\n                                                >\n                                                    AMOUNT\n                                                </s.TextDescription> \n\n                                                    \n                                                <StyledRoundButton\n                                                    style={{ lineHeight: 0.4, alignItems : 'baseline' }}\n                                                    disabled={claimingNft ? 1 : 0}\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        decrementMintAmount();\n                                                    }}\n                                                >\n                                                    -\n                                                </StyledRoundButton>\n\n                                                <s.TextDescription\n                                                    style={{\n                                                        textAlign: \"center\",\n                                                        color: \"var(--accent-text)\",\n                                                    }}\n                                                >\n                                                    {mintAmount}\n                                                </s.TextDescription>\n\n                                                <StyledRoundButton\n                                                    disabled={claimingNft ? 1 : 0}\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        incrementMintAmount();\n                                                    }}\n                                                >\n                                                    +\n                                                </StyledRoundButton>\n                                            </>\n\n                                            {blockchain.account === \"\" ||\n                                    blockchain.smartContract === null ? (\n                                        <StyledMaxButton\n                                                style={{ lineHeight: 0.4 }}\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    alert(\"Please Connect Your Metamask Wallet\")\n                                                }}\n                                            >\n                                                MAX\n                                            </StyledMaxButton>\n                                    ):\n                                            <StyledMaxButton\n                                                style={{ lineHeight: 0.4 }}\n                                                disabled={claimingNft ? 1 : 0}\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    maxCost();\n                                                }}\n                                            >\n                                                MAX\n                                            </StyledMaxButton>\n}\n                                        </s.Container>\n                                        <s.SpacerSmall />\n                                        <s.Container style={{ \n                                            justifyContent: 'space-between',\n                                            borderBottom: '5px solid var(--accent-text)'\n                                         }} ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                                <s.TextDescription\n                                                    style={{\n                                                        textAlign: \"center\",\n                                                        color: \"var(--accent-text)\",\n                                                    }}\n                                                >\n                                                    TOTAL\n                                                </s.TextDescription>           \n                                                <s.TextDescription\n                                                    style={{\n                                                        textAlign: \"center\",\n                                                        color: \"var(--accent-text)\",\n                                                    }}\n                                                >\n                                                    {totalCost} ETH\n                                                </s.TextDescription> \n                                        </s.Container>\n                                        <s.SpacerSmall />\n                                        <s.SpacerSmall />\n                                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                        {blockchain.account === \"\" ||\n                                    blockchain.smartContract === null ? (\n                                            <StyledButton\n                                                disabled={0}\n                                                onClick={(e) => {\n                                                    alert(\"Please Connect Your Metamask Wallet\")\n                                                }}\n                                            >\n                                                {claimingNft ? \"BUSY\" : \"MINT\"}\n                                            </StyledButton>\n                                    ):<StyledButton\n                                    disabled={claimingNft ? 1 : 0}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        claimNFTs();\n                                        getData();\n                                    }}\n                                >\n                                    {claimingNft ? \"BUSY\" : \"MINT\"}\n                                </StyledButton>}\n                                            \n                                        </s.Container>\n                                        <s.SpacerMedium />\n\n                                        <s.TextDescription\n                                                    style={{\n                                                        textAlign: \"center\",\n                                                        fontSize: 30,\n                                                        color: \"#bbbbbb\",\n                                                    }}\n                                                >\n                                                    MAKE SURE YOUR METAMASK IS CONNECTED\n                                        </s.TextDescription> \n                                    </>\n                                {/* )} */}\n                            </>\n                        )}\n                        <s.SpacerMedium />\n                        \n                    </s.Container>\n\n                    \n                </ResponsiveWrapper>\n                <s.SpacerMedium />\n                \n               \n           \n            </s.Container>\n        </s.Screen>\n    );\n}\n\nexport default App;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nconst keccak256 = require(\"keccak256\");\nconst { MerkleTree } = require(\"merkletreejs\");\n\nconst truncate = (input, len) =>\n    input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const TextArea = styled.textarea`\n    padding: 10px;\n    border: none;\n    background-color: var(--primary);\n    font-weight: bold;\n    font-size: 15px;\n    min-height: 200px;\n    max-width: 500px;\n    min-width: 500px;\n    color: var(--primary-text);\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n// border: 4px dashed var(--secondary);\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n    const dispatch = useDispatch();\n    const blockchain = useSelector((state) => state.blockchain);\n    const data = useSelector((state) => state.data);\n    const [addingAddresses, setaddingAddresses] = useState(false);\n    const [feedback, setFeedback] = useState(`PLEASE make Sure You've UPDATED the Addresses List inside Addresses.txt , each address in one line `);\n    const [mintAmount, setMintAmount] = useState(1);\n    const [copySuccess, setCopySuccess] = useState('');\n    const [copy, setCopy] = useState(false);\n    const [Whitelisted, setWhitelisted] = useState([]);\n    const [whitelistProcess, setwhitelistProcess] = useState(false);\n    const [PublicProcess, setPublicProcess] = useState(false);\n    const Address = useRef();\n    const [CONFIG, SET_CONFIG] = useState({\n        CONTRACT_ADDRESS: \"\",\n        NETWORK: {\n            NAME: \"\",\n            SYMBOL: \"\",\n            ID: 0,\n        },\n\n        SHOW_BACKGROUND: false,\n    });\n\n    const [Roothash, setRoothash] = useState(\"\");\n\n\n\n    const whitelist = async (state) => {\n        console.log(state);\n        console.log(data.whitelistEnabled);\n\n        try {\n            setwhitelistProcess(true);\n            const TX = await blockchain.smartContract\n                .setWhitelistEnabled(state)\n            setRoothash(\"Please Wait ...\")\n            let Res = await TX.wait(1)\n            console.log(Res)\n            await dispatch(fetchData(blockchain.account, 1));\n            setwhitelistProcess(false);\n            if (state) {\n                setRoothash(\"Whitelist Mint Enabled , Make Sure You Edited the Addresses.txt file And Set The RootHash\");\n            } else {\n                setRoothash(\"Whitelist Mint Disabled\");\n            }\n\n            // .send({\n            //     from: blockchain.account,\n            //     to: CONFIG.CONTRACT_ADDRESS\n            // })\n            // .on('transactionHash', function (hash) {\n            //     console.log(hash)\n            // })\n            // .on('confirmation', async (confirmationNumber, receipt) => {\n\n            //     console.log(receipt)\n            //     console.log(confirmationNumber)\n            //     console.log(window.ethereum._events)\n            //     if (confirmationNumber > 0) {\n            //         // try {\n            //         //     await ethereum.removeAllListeners()\n            //         // } catch (err) {\n            //         //     console.log(err)\n            //         // }\n\n            //         await dispatch(fetchData(blockchain.account,1));\n            //         setwhitelistProcess(false);\n\n            //         if (state) {\n            //             setRoothash(\"Whitelist Mint Enabled , Make Sure You Edited the Addresses.txt file And Set The RootHash\");\n            //         } else {\n            //             setRoothash(\"Whitelist Mint Disabled\");\n            //         }\n            //     }\n\n            // });\n        } catch (error) {\n            console.log(error);\n            setRoothash(\"Something Went Wrong , Please Try Again.\");\n\n        }\n\n    }\n\n    const Public = async (state) => {\n        console.log(state);\n        try {\n            setPublicProcess(true);\n            const TX = await blockchain.smartContract\n                .setPaused(state)\n            setRoothash(\"Please Wait ...\")\n            let Res = await TX.wait(1)\n            console.log(Res)\n            await dispatch(fetchData(blockchain.account, 1));\n            setPublicProcess(false);\n\n            if (state) {\n                setRoothash(\"Public Mint Disabled\");\n            } else {\n                setRoothash(\"Public Mint Enabled , Please Disable Whitelist Mint if Not Disabled\");\n            }\n            // .send({\n            //     from: blockchain.account,\n            //     to: CONFIG.CONTRACT_ADDRESS\n            // })\n            // .on('transactionHash', function (hash) {\n            //     console.log(hash)\n            // })\n            // .on('confirmation', async (confirmationNumber, receipt) => {\n\n            //     console.log(receipt)\n            //     console.log(confirmationNumber)\n            //     if (confirmationNumber > 0) {\n            //         try {\n            //             await ethereum.removeAllListeners()\n            //         } catch (err) {\n            //             console.log(err)\n            //         }\n            //         await dispatch(fetchData(blockchain.account,1));\n            //         setPublicProcess(false);\n\n            //         if (state) {\n            //             setRoothash(\"Public Mint Disabled\");\n            //         } else {\n            //             setRoothash(\"Public Mint Enabled , Please Disable Whitelist Mint if Not Disabled\");\n            //         }\n            //     }\n\n            // });\n        } catch (error) {\n            console.log(error);\n            setRoothash(\"Something Went Wrong , Please Try Again.\");\n\n        }\n\n    }\n    const RootHash = async e => {\n\n        const leaf = Whitelisted.map(addr => keccak256(addr));\n        const Merkletree = new MerkleTree(leaf, keccak256, { sortPairs: true });\n\n        const rootHash = Merkletree.getRoot().toString('hex');\n        const adddd = keccak256(blockchain.account);\n\n        const proof = Merkletree.getHexProof(adddd);\n        var hash = \"0x\" + rootHash;\n        setCopy(true)\n        if (copy) {\n            try {\n                let TX = await blockchain.smartContract\n                    .setMerkleRoot(hash)\n                setRoothash(\"Please Wait ...\")\n                let Res = await TX.wait(1)\n                console.log(Res)\n                setRoothash(\"Successfully Set Merkle Tree RootHash , You can Enable Whitelist if Not Enabled \")\n                // .call(\n                //     {\n                //         to: CONFIG.CONTRACT_ADDRESS,\n                //         from: blockchain.account\n                //     }\n                // ).then(async (receipt) => {\n                //     console.log(receipt);\n                //     setRoothash(\"Please Wait ...\")\n                //     await blockchain.smartContract\n                //         .setMerkleRoot(hash).send(\n                //             {\n                //                 to: CONFIG.CONTRACT_ADDRESS,\n                //                 from: blockchain.account\n                //             }\n                //         )\n\n                //     setRoothash(\"Successfully Set Merkle Tree RootHash , You can Enable Whitelist if Not Enabled \")\n\n                // });\n            }\n            catch (error) {\n                console.log(error);\n                setRoothash(\"Something Went Wrong , Please Try Again.\");\n\n            }\n        } else {\n            setRoothash(\"Root Hash : 0x\" + rootHash);\n        }\n\n    };\n\n\n\n    const getData = () => {\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n            dispatch(fetchData(blockchain.account, 1));\n        }\n    };\n\n    const getConfig = async () => {\n        const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n        });\n        const config = await configResponse.json();\n        SET_CONFIG(config);\n    };\n\n    const getWhitelistedAddresses = async () => {\n        const Data = await fetch(\"/config/Addresses.txt\", {\n            headers: {\n                \"Content-Type\": \"plain/text\",\n                Accept: \"plain/text\",\n            },\n        });\n        var Addresses = await Data.text();\n        Addresses = Addresses.split('\\n')\n        setWhitelisted(Addresses)\n    }\n\n    useEffect(() => {\n        getConfig();\n        getWhitelistedAddresses();\n    }, []);\n\n    useEffect(() => {\n        getData();\n    }, [blockchain.account]);\n\n    return (\n        <s.Screen>\n            <s.Container\n                flex={1}\n                ai={\"center\"}\n                style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n                image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n            >\n                <a href={CONFIG.MARKETPLACE_LINK}>\n                    <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n                </a>\n                <s.SpacerSmall />\n                <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n                    <s.Container\n                        flex={2}\n                        jc={\"center\"}\n                        ai={\"center\"}\n                        style={{\n                            backgroundColor: \"var(--accent)\",\n                            padding: 24,\n                            borderRadius: 24,\n                            opacity: 0.8,\n                            boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n                        }}\n                    >\n\n\n\n                        <s.SpacerSmall />\n\n                        <>\n\n                            <s.SpacerXSmall />\n\n                            <s.SpacerSmall />\n                            {blockchain.account === \"\" ||\n                                blockchain.smartContract === null ? (\n                                <s.Container ai={\"center\"} jc={\"center\"}>\n                                    <s.TextDescription\n                                        style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                    >\n                                        Please Connect Your Wallet\n                                    </s.TextDescription>\n                                    <s.SpacerSmall />\n                                    <StyledButton\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            dispatch(connect());\n                                            getData();\n                                        }}\n                                    >\n                                        CONNECT\n                                    </StyledButton>\n                                    {blockchain.errorMsg !== \"\" ? (\n                                        <>\n                                            <s.SpacerSmall />\n                                            <s.TextDescription\n                                                style={{\n                                                    textAlign: \"center\",\n                                                    color: \"var(--accent-text)\",\n                                                }}\n                                            >\n                                                {blockchain.errorMsg}\n                                            </s.TextDescription>\n                                        </>\n                                    ) : null}\n                                </s.Container>\n                            ) : (\n\n                                data.owner === blockchain.account ? (\n                                    <>\n                                        <s.TextDescription\n                                            style={{\n                                                textAlign: \"center\",\n                                                color: \"var(--accent-text)\",\n                                            }}\n                                        >\n                                            {feedback}\n                                        </s.TextDescription>\n                                        <s.SpacerMedium />\n\n                                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                            <StyledButton\n                                                style={\n                                                    { width: \"110px\" }\n                                                }\n                                                onClick={(e) => {\n                                                    // e.preventDefault();\n                                                    RootHash();\n                                                }}\n                                            >\n                                                {copy ? \"Confirm\" : \"SetRootHash\"}\n                                            </StyledButton>\n\n                                        </s.Container>\n                                        <s.SpacerSmall />\n                                        <s.TextDescription\n                                            style={{\n                                                textAlign: \"center\",\n                                                color: \"var(--accent-text)\",\n                                            }}\n                                        >\n                                            {Roothash}\n                                        </s.TextDescription>\n\n                                        <s.SpacerSmall />\n                                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                            {data.whitelistEnabled ? (\n\n                                                <StyledButton\n                                                    style={\n                                                        { width: \"150px\" }\n                                                    }\n                                                    disabled={whitelistProcess ? 1 : 0}\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        whitelist(false);\n                                                        getData();\n                                                    }}\n                                                >\n                                                    {whitelistProcess ? \"Disabling ...\" : \"Disable Whitelist\"}\n                                                </StyledButton>\n                                            ) : (\n                                                <StyledButton\n                                                    style={\n                                                        { width: \"150px\" }\n                                                    }\n                                                    disabled={whitelistProcess ? 1 : 0}\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        whitelist(true);\n                                                        getData();\n                                                    }}\n                                                >\n                                                    {whitelistProcess ? \"Enabling ...\" : \"Enable Whitelist\"}\n                                                </StyledButton>\n                                            )}\n\n\n                                        </s.Container>\n\n                                        <s.SpacerMedium />\n                                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                            {data.paused ? (\n                                                <StyledButton\n                                                    style={\n                                                        { width: \"150px\" }\n                                                    }\n                                                    disabled={PublicProcess ? 1 : 0}\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        Public(false);\n                                                        getData();\n                                                    }}\n                                                >\n                                                    {PublicProcess ? \"Enabling ...\" : \"Enable Public\"}\n                                                </StyledButton>\n\n                                            ) : (\n                                                <StyledButton\n                                                    style={\n                                                        { width: \"150px\" }\n                                                    }\n                                                    disabled={PublicProcess ? 1 : 0}\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        Public(true);\n                                                        getData();\n                                                    }}\n                                                >\n                                                    {PublicProcess ? \"Disabling ...\" : \"Disable Public\"}\n                                                </StyledButton>\n                                            )}\n\n\n                                        </s.Container>\n\n\n                                    </>\n                                ) : (\n                                    <>\n                                        <s.TextTitle\n                                            style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                        >\n                                            403 : You're Not Authorized To Access This Page\n                                        </s.TextTitle>\n\n                                    </>)\n\n                            )}\n                        </>\n                        <s.SpacerMedium />\n                    </s.Container>\n                </ResponsiveWrapper>\n                <s.SpacerMedium />\n\n            </s.Container>\n        </s.Screen>\n    );\n}\n\nexport default App;\n","import { Route, Routes } from 'react-router-dom';\nimport Mint from './Mint.js';\nimport Manage from './Manage.js';\n\n\nconsole.log(process.env)\nfunction App() {\n  return (\n    <div>\n      <Routes>\n        <Route exact path=\"/\" element={<Mint />} />\n        <Route exact path=\"/Manage\" element={<Manage />} />\n      </Routes>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router } from 'react-router-dom';\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n  ,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}